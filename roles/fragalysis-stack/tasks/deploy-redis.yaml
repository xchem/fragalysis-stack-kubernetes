---

- name: Create redis volume claim
  k8s:
    definition: "{{ lookup('template', 'pvc-redis.yaml.j2') }}"
    wait_timeout: "{{ wait_timeout }}"
  when: redis_vol_size_g | int > 0

# Best practice ... wait for the PVC to bind.
# e.g. wait until resources[0].status.phase == Bound (initially Pending)

- name: Wait for redis volume claim to bind
  k8s_info:
    kind: PersistentVolumeClaim
    name: redis
    namespace: "{{ stack_namespace }}"
  register: bind_result
  until: bind_result.resources[0].status.phase == 'Bound'
  delay: 5
  retries: "{{ (bind_timeout|int / 5)|int }}"
  when:
  - redis_vol_size_g | int > 0
  - wait_for_bind | bool

# Now deploy redis and its service.

- name: Deploy redis
  k8s:
    definition: "{{ lookup('template', '{{ item }}.yaml.j2') }}"
  loop:
  - configmap-redis
  - deployment-redis
  - service-redis
